{"version":3,"sources":["Components/Button/Button.jsx","Components/API/API.js","Components/NotesTitle/NotesTitle.jsx","Components/Note/Note.jsx","Components/NotesContainer/NotesContainer.jsx","Components/NoteInput/NoteInput.jsx","Components/Notes/Notes.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Button","props","fa","fas","icon","handler","className","this","onClick","Component","API","url","a","fetch","response","json","result","console","log","data","method","body","JSON","stringify","id","NotesTitle","api","updateState","Note","deleteNote","content","NotesContainer","notes","map","note","NoteInput","state","value","textRef","React","createRef","e","setState","prev","target","ref","onChange","bind","type","name","addNote","key","nanoid","Notes","get","post","delete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.571aa2f0.chunk.js","sourcesContent":["import './Button.scss';\r\nimport React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Button extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.fa = fas[this.props.icon];\r\n    this.handler = this.props.handler\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"button\">\r\n        <FontAwesomeIcon icon={this.fa} onClick={this.handler}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export default class API {\r\n  constructor() {\r\n    this.url = 'http://localhost:7070';\r\n  }\r\n\r\n  async get() {\r\n    try {\r\n      this.response = await fetch(`${this.url}/notes`);\r\n      this.result = await this.response.json();\r\n      console.log('Данные обновлены');\r\n      return this.result;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async post(data) {\r\n    try {\r\n      this.response = await fetch(`${this.url}/notes`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n      });\r\n      console.log('Заметка добавлена');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async delete(id) {\r\n    try {\r\n      this.response = await fetch(`${this.url}/notes/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      console.log('Заметка удалена');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n","import './NotesTitle.scss';\r\nimport { Component } from 'react'\r\nimport Button from '../Button/Button'\r\nimport API from '../API/API';\r\n\r\nexport default class NotesTitle extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.api = new API();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notes__title\">\r\n        <span>Notes</span>\r\n        <Button icon={'faSync'} handler={this.props.updateState} />\r\n      </div>\r\n    )\r\n  }\r\n}","import './Note.scss';\r\nimport React, { Component } from 'react'\r\nimport Button from '../Button/Button';\r\n\r\nexport default class Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"note\">\r\n        <Button icon={'faTimes'} handler={this.props.deleteNote} />\r\n        <div className=\"note__text\">\r\n          {this.props.content}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import './NotesContainer.scss';\r\nimport React, { Component } from 'react'\r\nimport Note from '../Note/Note';\r\n\r\nexport default class NotesContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notes__container\">\r\n        {this.props.notes.map((note) => <Note deleteNote={() => this.props.deleteNote(note.id)} {...note} />)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import './NoteInput.scss';\r\nimport React, { Component } from 'react'\r\nimport Button from '../Button/Button';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport default class NoteInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: ''\r\n    }\r\n    this.textRef = React.createRef()\r\n  }\r\n\r\n\r\n  onChange(e) {\r\n    this.setState((prev) => ({\r\n      value: e.target.value\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notes__input\">\r\n        <div>New Note</div>\r\n        <textarea ref={this.textRef} value={this.state.value} onChange={this.onChange.bind(this)} type=\"text\" name=\"note\" />\r\n        <Button icon={'faPaperPlane'} handler={() => this.props.addNote({\r\n          key: nanoid(5),\r\n          content: this.state.value\r\n        })} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import './Notes.scss';\r\nimport { Component } from 'react'\r\nimport NotesTitle from '../NotesTitle/NotesTitle';\r\nimport NotesContainer from '../NotesContainer/NotesContainer';\r\nimport NoteInput from '../NoteInput/NoteInput';\r\nimport API from '../API/API';\r\n\r\nexport default class Notes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.api = new API();\r\n    this.state = {\r\n      notes: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.updateState();\r\n  }\r\n\r\n  async updateState() {\r\n    const notes = await this.api.get()\r\n    this.setState((prev) => ({\r\n      notes,\r\n    }))\r\n  }\r\n\r\n  async addNote(data) {\r\n    if (data.content === '') return;\r\n    await this.api.post(data);\r\n    await this.updateState();\r\n  }\r\n\r\n  async deleteNote(id) {\r\n    await this.api.delete(id);\r\n    await this.updateState();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notes\">\r\n        <NotesTitle updateState={this.updateState.bind(this)} />\r\n        <NotesContainer deleteNote={this.deleteNote.bind(this)} notes={this.state.notes} />\r\n        <NoteInput addNote={this.addNote.bind(this)} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import './App.scss';\nimport Notes from './Components/Notes/Notes';\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <Notes />\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}